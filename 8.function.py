# **** Функции ****

# Функции можно представить себе как фабрику, со входом и выходом

# Функция оперирует с данными (объектами)

# Вариант 1. Функция, которая не имеет входа и выхода

# создание функции
def func_1():
    print("Hello!")

# вызов функции
# func_1()

def func_2():
    name = "Asya"
    print(f"Hello, {name}!") # способ форматирования f-string
    
# func_2()

# Вариант 2. Функция, которая имеет вход (-ы), но не имеет выхода (ничего не возвразщает)

# вход функции - это аргумент 


def func_3(argument_1):
    """
    Пример функции с 1 аргументом под названием argument_1

    """
    result = argument_1 ** 2
    print(result)

# func_3(100) # значение, которую отправляем в функцию называется параматетромы

def func_4(arg_1, arg_2):
    result = arg_1 + arg_2
    print(result)

# вызов функции с передачей 2-х параметров
# func_4(20, 54)

# Вариант 2.1. Функция у которой аргументы имеют значения по умолчанию 

def func_5(arg_1, arg_2, arg_3=25):
    result = arg_1 + arg_2 + arg_3
    print(result)

# func_5(39, 503) #третьему аргументу передается параметр
# func_5(39, 503, 1) № третьему аргументу НЕ передается параметр 

# Типы передачи параметров 
# позиционные параметры и именованные параметры

def custom_sum(a=5, b=10, c=15):
    res = a + b + c
    print(res)

#позиционные параметры
# custom_sum(5, 8) # параметры присваиваются согласно порядку расположения аргуметов

# именованные параметры (указываем название аргумента)
# custom_sum(c=100) # параметр присваивается конкретному аргументу 

# Вариант 2.2 Множественные аргументы

# множественные позиционные параметры 
# можно передавать произвольное кол-во позиционных параметров
def func_6(*args):
    print(args)

# func_6(10, 20, 40, 60, 80)

def func_7(*args):
    # функция аккумулирующая (накапливающая) значение параматров в переменной res
    res = 0
    for var in args:
        res += var
    print(res)

# func_7(10, 40, 30, 30)

# множественные именованные параметры 
# можем передать кол-во именованных параметров

def func_8(**kwargs):
    print(kwargs)

# func_8(a=10, b=20, c=30) 

# *** пример. Данные человека

def person_data_parser(**args):
    for parameter, value in args.items():
        print(f"{parameter} : {value}")

person_data_parser(name="Asya", age="29", prog_lang="python")
person_data_parser(name="Chris", age="25")